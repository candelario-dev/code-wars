/*To pass the series of gates guarded by the owls, Kenneth needs to present them each with a highly realistic portrait of one. Unfortunately, he is absolutely rubbish at drawing, and needs some code to return a brand new portrait with a moment's notice.
So Kenneth needs a method that will take a garble of text generated by mashing at his keyboard (numbers and letters, but he knows how to avoid punctuation etc.) for a bit and give him a symmetrical owl with a lovely little face, with a truly symmetrical plumage made of uppercase letters and numbers.*/

function owlPic(text){
  let arr = text.toUpperCase().split('')
  let plum = []
  for (let i = 0; i<arr.length; i++){
    if (arr[i]== '8' || arr[i]== 'W' || arr[i]== 'T' || arr[i]== 'Y' || arr[i]== 'U' || arr[i]== 'I' || arr[i]== 'O' || arr[i]== 'A' || arr[i]== 'H' || arr[i]== 'X' || arr[i]== 'V' || arr[i]== 'M'){
      plum.push(arr[i])
    }
  }
  let newText = plum.join('')
  let mlup = plum.reverse().join('')
  return `${newText}\'\'0v0\'\'${mlup}`

}
